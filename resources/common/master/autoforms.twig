{#
 ~ Alxarafe. Development of PHP applications in a flash!
 ~ Copyright (C) 2018-2019 Alxarafe <info@alxarafe.com>
#}

{#
    This macro generate the field, for a table cell, for a form or for a list of fields.
#}
{% macro generateField(item, itemName, editableField, showLabel, showCols, context) %}
    {% import "master/autoforms.twig" as self %}

    {# items param: Item is the array with all details #}

    {# editableField param: Is field editable? #}
    {% set editable = false %}
    {% if editableField is defined %}
        {% set editable = editableField %}
    {% endif %}

    {# showLabel param: Need show label? #}
    {% set hasLabel = false %}
    {% if showLabel is defined %}
        {% set hasLabel = showLabel %}
    {% endif %}

    {# showColsparam: Need show cols? #}
    {% set hasCols = true %}
    {% if showCols is defined %}
        {% set hasCols = showCols %}
    {% endif %}

    {{ self.simpleEditField(item, itemName, editable, hasLabel, hasCols, context) }}
{% endmacro %}

{#
    This macro generates a simple edit input field.
#}
{% macro simpleEditField(item, itemName, editable, hasLabel, hasCols, context) %}
    {% set labelSize = 0 %}
    {% set labelInput = 12 %}
    {% if hasLabel %}
        {% set labelSize = 3 %}
        {% if hasCols %}<div class="col-xs-{{ labelSize }}">{% endif %}
        <label for="{{ item.idName }}" class="control-label">{{ item.label }}:</label>
        {% if hasCols %}</div>{% endif %}
    {% endif %}

    {% set viewInputType = item.viewData.type %}
    {% if viewInputType is same as('integer') or item.struct.type is same as('number') %}
        {% set inputType = 'number' %}
    {% elseif viewInputType is same as('datetime') %}
        {% set inputType = 'datetime' %}
    {% elseif viewInputType is same as('date') %}
        {% set inputType = 'date' %}
    {% elseif viewInputType is same as('time') %}
        {% set inputType = 'time' %}
    {% elseif viewInputType is same as('bool') %}
        {% set inputType = 'checkbox' %}
    {% elseif viewInputType is same as('string') %}
        {% set inputType = 'text' %}
    {% elseif viewInputType is same as('select') %}
        {% set inputType = 'select' %}
    {% elseif viewInputType is same as('select2') %}
        {% set inputType = 'select2' %}
    {% elseif viewInputType is same as('radio') %}
        {% set inputType = 'radio' %}
    {% elseif viewInputType is same as('color') %}
        {% set inputType = 'color' %}
    {% elseif viewInputType is same as('range') %}
        {% set inputType = 'range' %}
    {% elseif viewInputType is same as('textarea') %}
        {% set inputType = 'textarea' %}
    {% elseif viewInputType is same as('file') %}
        {% set inputType = 'file' %}
    {% elseif viewInputType is same as('toggle') %}
        {% set inputType = 'toggle' %}
    {% elseif viewInputType is same as('touchspin') %}
        {% set inputType = 'touchspin' %}
    {% elseif viewInputType is same as('password') %}
        {% set inputType = 'password' %}
    {% else %}
        {% set inputType = 'text' %}
    {% endif %}

    {% set extraAttrResult = '' %}
    {% set extraAttr = {
        'type': null,
        'pattern': null,
        'min': null,
        'max': null,
        'maxlength': null,
        'placeholder': null,
        'title': null
    } %}
    {% for key, value in extraAttr %}
        {% if item.viewData[key] is defined %}
            {% set extraAttrResult = extraAttrResult ~ ' ' ~ key ~ '=' ~ item.viewData[key] %}
        {% endif %}
    {% endfor %}

    {% set labelInput = labelInput - labelSize %}
    {% if hasCols %}<div class="col-xs-{{ labelInput }}">{% endif %}
    {% if editable %}
        <fieldset class="form-group">
            {% if inputType is same as('number') %}
                <input id="{{ item.idName }}" name="{{ item.idName }}" type="number" class="form-control" value="{{ item.value }}" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %}>
                {% elseif inputType is same as('date') or inputType is same as('time') %}
            <input id="{{ item.idName }}" name="{{ item.idName }}" type="{{ inputType }}" class="form-control" value="{{ item.value }}" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %}>
                {% elseif inputType is same as('password') %}
            <input id="{{ item.idName }}" name="{{ item.idName }}" type="password" class="form-control" value="" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %}>
                {% elseif inputType is same as('datetime') %}
            <input id="{{ item.idName }}" name="{{ item.idName }}" type="datetime-local" class="form-control" value="{{ item.value | replace({' ': 'T'}) }}" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %}>
                {% elseif inputType is same as('text') or inputType is same as('string') %}
            <input id="{{ item.idName }}" name="{{ item.idName }}" type="text" class="form-control" value="{{ item.value }}" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %}>
                {% elseif inputType is same as('select') or inputType is same as('select2') %}
                {% for key, values in context.indexesTables[item.tableName] %}
            {% if values is iterable %}
            {% if values.column is defined and values.column == itemName %}
                {% set ajaxUrl = context.url ~ '&method=ajaxSearch&table=' ~ values.referencedtable %}
                <select id="{{ item.idName }}" name="{{ item.idName }}" class="form-control select2-ajax" style="width: 100%;"
                        data-ajax--url="{{ ajaxUrl }}"
                        data-placeholder="{{ trans('select-an-option') }}"
                        data-id="{% if context.model.getId() is not empty %}{{ item.idName }}{% endif %}"
                        data-allow-clear="true">
                    {% if context.model.getId() is not empty %}
                        <option value="{{ context.model.getId() }}" selected="selected">{{ item.value }} ({{ trans('pre-selected') }})</option>
                    {% endif %}
                </select>
            {% endif %}
            {% endif %}
                {% endfor %}
                {% elseif inputType is same as('radio') %}
                {# TODO: Incomplete, only 1 value, must receive a list of options #}
            <input type="radio" id="{{ item.idName }}" name="{{ item.idName }}" value="{{ item.value }}">
                <label for="{{ item.idName }}">{{ item.value }}</label><br>
                {% elseif inputType is same as('color') %}
                {% set defaultColor = item.value | default('#000000') %}
            <input type="color" class="form-control" id="{{ item.idName }}" name="{{ item.idName }}" value="{{ defaultColor }}">
                {% elseif inputType is same as('range') %}
            <input type="range" class="form-control" id="{{ item.idName }}" name="{{ item.idName }}" value="{{ item.value }}">
                {% elseif inputType is same as('textarea') %}
                <textarea class="form-control" id="{{ item.idName }}" name="{{ item.idName }}" rows="3">{{ item.value }}</textarea>
                {% elseif inputType is same as('file') %}
            <input type="file" class="form-control-file" id="{{ item.idName }}">
                {% elseif inputType is same as('toggle') %}
                <label>
                    <input type="checkbox" id="{{ item.idName }}" name="{{ item.idName }}" data-toggle="toggle">
                    {{ item.value }}
                </label>
                {% elseif inputType is same as('touchspin') %}
                <div class="input-group bootstrap-touchspin">
                    <span class="input-group-btn input-group-prepend bootstrap-touchspin-injected">
                        <button class="btn btn-primary bootstrap-touchspin-down" type="button">
                            <i class="ft-minus"></i>
                        </button>
                    </span>
                    <input type="text" id="{{ item.idName }}" name="{{ item.idName }}" class="touchspin form-control" value="{{ item.value }}">
                    <span class="input-group-btn input-group-append bootstrap-touchspin-injected">
                        <button class="btn btn-primary bootstrap-touchspin-up" type="button">
                            <i class="ft-plus"></i>
                        </button>
                    </span>
                </div>
                {% elseif inputType is same as('bool') %}
                <span class="help-block">Replace this type with checkbox</span>
                {% elseif inputType is same as('checkbox') %}
                <div class="input-group">
                <span class="input-group-addon">
                    <input type="checkbox" id="{{ item.idName }}" name="{{ item.idName }}" {{ extraAttrResult }} {% if item.isPk %}readonly{% endif %} value="true" {% if item.value is not empty %}checked{% endif %}>
                </span>
                    <input type="text" class="form-control" value="{{ item.value }}" readonly="readonly">
                </div>
            {% else %}
                <span id="{{ item.idName }}" name="{{ item.idName }}">{{ item.value }}</span>
                <span class="help-block">Type {{ inputType }} not defined</span>
            {% endif %}
        </fieldset>
    {% else %}
        <span id="{{ item.idName }}" name="{{ item.idName }}">{{ item.value }}</span>
    {% endif %}

    {# CHANGE THIS VALUE TO GET DEBUG INFO #}
    {#
        <pre>{{ dump(item) }}</pre>
    #}
    {% if hasCols %}</div>{% endif %}
{% endmacro %}

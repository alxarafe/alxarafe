{#
 ~ Alxarafe. Development of PHP applications in a flash!
 ~ Copyright (C) 2018-2019 Alxarafe <info@alxarafe.com>
#}

{# This file is a .twig file to be able to set data from controllers to JS #}

var $ctrlUser = {% if ctrl.user %}'{{ ctrl.username }}'{% else %}null{% endif %};
var $canAccess = {% if ctrl.user %}{{ ctrl.canAccess }}{% else %}false{% endif %};
var $canCreate = {% if ctrl.user %}{{ ctrl.canCreate }}{% else %}false{% endif %};
var $canRead = {% if ctrl.user %}{{ ctrl.canRead }}{% else %}false{% endif %};
var $canUpdate = {% if ctrl.user %}{{ ctrl.canUpdate }}{% else %}false{% endif %};
var $canDelete = {% if ctrl.user %}{{ ctrl.canDelete }}{% else %}false{% endif %};
var $canPrint = {% if ctrl.user %}{{ ctrl.canPrint }}{% else %}false{% endif %};
var $canExport = {% if ctrl.user %}{{ ctrl.canExport }}{% else %}false{% endif %};
var $canSendMail = {% if ctrl.user %}{{ ctrl.canSendMail }}{% else %}false{% endif %};
var $debug = {{ constant('DEBUG') }};
{# More origiunal languages can be found: https://datatables.net/plug-ins/i18n/ #}
var $dataTableLanguage = {
    "sProcessing": '{{ lang.trans('dataTable-sProcessing') }}',
    "sLengthMenu": '{{ lang.trans('dataTable-sLengthMenu') }}',
    "sZeroRecords": '{{ lang.trans('dataTable-sZeroRecords') }}',
    "sEmptyTable": '{{ lang.trans('dataTable-sEmptyTable') }}',
    "sInfo": '{{ lang.trans('dataTable-sInfo') }}',
    "sInfoEmpty": '{{ lang.trans('dataTable-sInfoEmpty') }}',
    "sInfoFiltered": '{{ lang.trans('dataTable-sInfoFiltered') }}',
    "sInfoPostFix": '{{ lang.trans('dataTable-sInfoPostFix') }}',
    "sSearch": '{{ lang.trans('dataTable-sSearch') }}',
    "sUrl": '{{ lang.trans('dataTable-sUrl') }}',
    "sInfoThousands": '{{ lang.trans('dataTable-sInfoThousands') }}',
    "sLoadingRecords": '{{ lang.trans('dataTable-sLoadingRecords') }}',
    "oPaginate": {
        "sFirst": '{{ lang.trans('dataTable-oPaginate-sFirst') }}',
        "sLast": '{{ lang.trans('dataTable-oPaginate-sLast') }}',
        "sNext": '{{ lang.trans('dataTable-oPaginate-sNext') }}',
        "sPrevious": '{{ lang.trans('dataTable-oPaginate-sPrevious') }}'
    },
    "oAria": {
        "sSortAscending": '{{ lang.trans('dataTable-oAria-sSortAscending') }}',
        "sSortDescending": '{{ lang.trans('dataTable-oAria-sSortDescending') }}'
    },
    "oButtons": {
        "sShow": '{{ lang.trans('show') }}',
        "sEdit": '{{ lang.trans('edit') }}',
        "sDelete": '{{ lang.trans('delete') }}'
    }
};

var $dataTableButtons = {
    "buttons": {
        "copy": '{{ lang.trans('dataTable-oButtons-sCopy') }}',
        "csv": '{{ lang.trans('dataTable-oButtons-sCSV') }}',
        "excel": '{{ lang.trans('dataTable-oButtons-sExcel') }}',
        "pdf": '{{ lang.trans('dataTable-oButtons-sPDF') }}',
        "colvis": '{{ lang.trans('dataTable-oButtons-sColvis') }}',
        "colvisRestore": '{{ lang.trans('dataTable-oButtons-sColvisRestore') }}'
    }
};

if ($canExport) {
    $dataTableLanguage = Object.assign({}, $dataTableLanguage, $dataTableButtons)
}

/**
 * Creates a new DataTable
 *
 * @param name
 * @param origData
 */
function newDataTable(name, origData) {
    //console.log(origData);
    var columnsList = JSON.parse(origData.columns);
    var columns = [];
    columnsList.forEach(function (element) {
        columns.push({'data': element});
    });
    var rowsPerPage = origData.rowsPerPage;
    var url = origData.url;
    var $opts = {
        destroy: true,
        pageLength: rowsPerPage,
        stateSave: true,
        colReorder: true,
        responsive: true,
        paging: true,
        pagingType: "full_numbers",
        processing: true,
        serverSide: true,
        deferRender: true,
        ajax: {
            method: "POST",
            url: url,
            error: function () {
                $("." + name + "-error").html("");
                $("#" + name).append('<tbody class="dt-cliente-error-grid-error"><tr><th colspan="' + columns.length + '">No se han recibido datos del servidor</th></tr></tbody>');
                $("#" + name + "_processing").css("display", "none");

            }
        },
        columns: columns,
        lengthChange: false,
        searching: true,
        ordering: true,
        info: true,
        autoWidth: true,
        language: $dataTableLanguage
    };

    var table = $('#' + name).DataTable($opts);

    if ($canExport) {
        $optsButtons = {
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="far fa-copy"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sCopy') }}'
                },
                {
                    extend: 'csvHtml5',
                    text: '<i class="fa fa-table"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sCSV') }}'
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="far fa-file-excel"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sExcel') }}'
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="far fa-file-pdf"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sPDF') }}'
                },
                {
                    extend: 'colvis',
                    text: '<i class="fas fa-columns"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sColvis') }}'
                },
                {
                    extend: 'colvisRestore',
                    text: '<i class="far fa-window-restore"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sColvisRestore') }}'
                }
            ]
        };
    } else {
        $optsButtons = {
            buttons: [
                {
                    extend: 'colvis',
                    text: '<i class="fas fa-columns"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sColvis') }}'
                },
                {
                    extend: 'colvisRestore',
                    text: '<i class="far fa-window-restore"></i>',
                    titleAttr: '{{ lang.trans('dataTable-oButtons-sColvisRestore') }}'
                }
            ]
        };
    }

    new $.fn.dataTable.Buttons(table, $optsButtons);

    table.buttons().container().appendTo('#' + name + '_wrapper .col-sm-6:eq(0)');
}

/**
 * When document is ready.
 */
$(document).ready(function () {
    if (typeof (tables) == 'object') {
        // If tables is an object, we are receiving and array of datatables
        for (var table in tables) {
            newDataTable(table, tables[table]);
        }
    }
});